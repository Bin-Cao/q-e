                 --------------------------
                 - XClib TESTING PROGRAMS -
                 --------------------------

To compile the following side programs, once you have properly 
configured QE, just type:

	make test
	
in the XClib directory. With CMake they will be compiled automati-
cally if 'QE_ENABLE_TEST' is set to true (default).


---------------------- XC_INFO -----------------------------------

xc_info.x is a small serial program that provides infos on XC 
functionals, both the ones from internal QE library and the ones
from Libxc. Just run the command:

	./xc_info.x

then type the functional name (or any allowed combination). It
will show a brief description, the list of the external parameters, 
and all the available references. For Libxc functionals it will also
tell if they are currently usable in QE or not.


--------------------- XCLIB_TEST ---------------------------------

xclib_test.x is a testing program for the XClib library routines.
Due to the high number of available dfts (including those from
the external library Libxc) and the different parallelization 
schemes available already or in experimental phase, this program
is intended to be a tool that helps developers to maintain and
develop XClib by keeping an overview on the available options
in order not to neglect any of them (which is hard to do
by working with test-suite only).
The program generates an xml file with a set of output data produced
according to the test input options.
You can run the program by using commands like:

	./xclib_test.x < input_file                [ serial ]
        mpirun -np XX xclib_test.x < input_file    [parallel]

Different options are available and the program can be used for
different purposes.
An example of input file content is the following:

        &INPUT_NAMELIST
                 test='gen-benchmark'
                 filename_xml='xctest_data.xml'
                 dft='pbe'
                 family='GGA'
                 nspin=1
                 xc_derivative=.FALSE.
        /

The following options have to be set:

- test: 'gen-benchmark' generates the xml file with the benchmark set
        of XClib output data. 'exe-benchmark' calculates a set of
        XClib output data and compares it with the one in the xml file.

- filename_xml: the name of the xml file.

- dft: the input functional. Besides the specific functionals, three
       other options are available:
       - 'all_terms' spans all the available single term functionals
         of QE (e.g. LDA exchange, LDA correlation, GGA exchange, ...);
       - 'all_short' spans all the full dfts (identified by the 'shortnames')
         available in XClib, e.g. LDA, PBESOL, PW86PBE, etc.
       - 'all_libxc' spans all the available Libxc functionals. Those
         that are not usable in the current QE version will be skipped
         with a notice.

- family: the dft family (needed in order to distinguish those few cases
          where LDA terms have the same name of the GGA ones, e.g. PBE).
          If dft='all_something' then you can put family='all_something'
          too in order to span all the functionals regardless their family.
          
- nspin: unpolarized (=1) or polarized (=2).

- xc_derivative: if .TRUE. calculates the derivative terms (needed,
                 for example, by linear response code) instead of
                 the ordinary energy+potential output.

Obviously the program can be used to compare QE and Libxc functionals,
to check differences from one version to another or to check differences
in the output by changing external parameters or other stuff.
          

